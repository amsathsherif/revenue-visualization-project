import streamlit as st
import psycopg2
from datetime import date

# Establish a connection to PostgreSQL
mydb = psycopg2.connect(
    host="localhost",
    user="postgres",
    password="1234",
    database="irb_projects",
    port="5432"
)
mycursor = mydb.cursor()
print("Connection Established")

user_login = {
    "mvr": "1234",
    "tcbot": "2345",
    "kkbot": "3456"
}

def validate_user(username, password):
    return user_login.get(username.lower()) == password

def main():
    st.title("IRB_Revenue Entering sheet")
    logo = r'C:\Users\Administrator\Desktop\guvi_course_pyn\irb_projects\IRB_New_Logo.png'  
    st.image(logo, width=1500)  

    # Create a state dictionary to store login state
    if 'login_state' not in st.session_state:
        st.session_state.login_state = "initial"

    username = st.text_input("Username", key="username")
    password = st.text_input("Password", type="password", key="password")
    
    if st.button("Login"):
        st.session_state.login_state = "valid" if validate_user(username, password) else "invalid"

    if st.session_state.login_state == "valid":
        option = st.sidebar.selectbox("Select the projects",("MVR", "TCBOT", "KKBOT"))
        today = date.today()

        if option == "MVR":
            st.subheader("Enter the Revenue details and transaction details")
            project_name = "MVR"
            Total_collection = st.text_input("Enter the total collection")
            Total_ETC_collection = st.text_input("Enter the ETC Collection")
            Total_Exempted_transaction = st.text_input("Enter the Exempted transactions")
            entry_date = st.date_input("Enter the Date", value=today)
            if st.button("Update"):
                sql = "insert into users (project_name,Total_collection,Total_ETC_collection,Total_Exempted_transaction,entry_date)values(%s,%s,%s,%s,%s)"
                val = (project_name, Total_collection, Total_ETC_collection, Total_Exempted_transaction, entry_date)
                mycursor.execute(sql, val)
                mydb.commit()
                st.success("Record Updated Successfully!!!")

        elif option == "TCBOT":
            st.subheader("Enter the Revenue details and transaction details")
            project_name = "TCBOT"
            Total_collection = st.text_input("Enter the total collection")
            Total_ETC_collection = st.text_input("Enter the ETC Collection")
            Total_Exempted_transaction = st.text_input("Enter the Exempted transactions")
            entry_date = st.date_input("Enter the Date", value=today)
            if st.button("Update"):
                sql = "insert into users (project_name,Total_collection,Total_ETC_collection,Total_Exempted_transaction,entry_date)values(%s,%s,%s,%s,%s)"
                val = (project_name, Total_collection, Total_ETC_collection, Total_Exempted_transaction, entry_date)
                mycursor.execute(sql, val)
                mydb.commit()
                st.success("Record Updated Successfully!!!")

        elif option == "KKBOT":
            st.subheader("Enter the Revenue details and transaction details")
            project_name = "KKBOT"
            Total_collection = st.text_input("Enter the total collection")
            Total_ETC_collection = st.text_input("Enter the ETC Collection")
            Total_Exempted_transaction = st.text_input("Enter the Exempted transactions")
            entry_date = st.date_input("Enter the Date", value=today)
            if st.button("Update"):
                sql = "insert into users (project_name,Total_collection,Total_ETC_collection,Total_Exempted_transaction,entry_date)values(%s,%s,%s,%s,%s)"
                val = (project_name, Total_collection, Total_ETC_collection, Total_Exempted_transaction, entry_date)
                mycursor.execute(sql, val)
                mydb.commit()
                st.success("Record Updated Successfully!!!")

    elif st.session_state.login_state == "invalid":
        st.error("Invalid username or password!")

if __name__ == "__main__":
    main()
